%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: ad28329456aa1fd458c2c03f72d79e52, type: 3}
  m_Name: PhysicsHandsReadme
  m_EditorClassIdentifier: 
  icon: {fileID: 2800000, guid: 27247312d0008d4498c9606f91df8e90, type: 3}
  title: Physics Hands Example
  scene: {fileID: 102900000, guid: 1a70a889c083dac4480e0dd4c4a547d8, type: 3}
  sections:
  - heading: 
    text: Please note that Physics Hands only works in Unity 2021 or later.This scene
      may open in other versions, however, it will not work.
    linkText: 
    url: 
    pingSceneElement: 
    settingsPage: 
    assetLinkText: 
    assetLink: {fileID: 0}
    assetLinkOpens: 0
    image: {fileID: 0}
    imageHeight: 0
  - heading: 
    text: If you're looking for a more feature rich Physics Hands demo, check out
      our Physics Hands Playground project on Github.
    linkText: Physics Hands Playground
    url: https://github.com/ultraleap/physicshandsplayground
    pingSceneElement: 
    settingsPage: 
    assetLinkText: 
    assetLink: {fileID: 0}
    assetLinkOpens: 0
    image: {fileID: 0}
    imageHeight: 0
  - heading: Project Setup
    text: Physics Hands requires a few project settings to be modified to get the
      best out of them.
    linkText: 
    url: 
    pingSceneElement: 
    settingsPage: 
    assetLinkText: 
    assetLink: {fileID: 0}
    assetLinkOpens: 0
    image: {fileID: 0}
    imageHeight: 0
  - heading: Time Settings
    text: First we need to modify your time settings.
    linkText: 
    url: 
    pingSceneElement: 
    settingsPage: Project/Time
    assetLinkText: 
    assetLink: {fileID: 0}
    assetLinkOpens: 0
    image: {fileID: 0}
    imageHeight: 0
  - heading: 
    text: Set your <b>Fixed Timestep</b> to <b>0.011111</b>
    linkText: 
    url: 
    pingSceneElement: 
    settingsPage: 
    assetLinkText: 
    assetLink: {fileID: 0}
    assetLinkOpens: 0
    image: {fileID: 0}
    imageHeight: 0
  - heading: Physics Settings
    text: Next we need to modify your Physics Settings.
    linkText: 
    url: 
    pingSceneElement: 
    settingsPage: Project/Physics
    assetLinkText: 
    assetLink: {fileID: 0}
    assetLinkOpens: 0
    image: {fileID: 0}
    imageHeight: 0
  - heading: 
    text: 'Set your <b>Gravity</b> to <b>X: 0, Y: -4.905, Z: 0</b> \nReduce the <b>Default
      Max Depenetration Velocity</b> To <b>1</b> \nReduce the <b>Sleep Threshold</b>
      to <b>0.001</b> \nSet <b>Contacts Generation</b> to <b>Persistent Contact Manifold</b>
      \nChange the <b>Friction Type</b> to <b>Patch Fricton Type</b> \nEnable <b>Enchanced
      Determinism</b> \nEnable <b>Improved Patch Friction</b> \nChange the <b>Solver
      Type</b> to <b>Temporal Gauss Seidel</b>'
    linkText: 
    url: 
    pingSceneElement: 
    settingsPage: 
    assetLinkText: 
    assetLink: {fileID: 0}
    assetLinkOpens: 0
    image: {fileID: 0}
    imageHeight: 0
  - heading: Modifying Physics Hands Settings
    text: Most other Physics Hands settings can be changed via the <b>Physics Provider</b>.
      \nThis scene shows an ideal setup, where your original <b>Leap Provider</b>
      sends data to the <b>Physics Provider</b>, which then sends data to the <b>Hand
      Binder</b> for visuals.
    linkText: 
    url: 
    pingSceneElement: Leap/PhysicsProvider
    settingsPage: 
    assetLinkText: 
    assetLink: {fileID: 0}
    assetLinkOpens: 0
    image: {fileID: 0}
    imageHeight: 0
  - heading: Adding Custom Physics Objects
    text: Physics Hands work best when your <b>Rigibodies</b> have their <b>Collision
      Detection Mode</b> set to either <b>Discrete</b> or <b>Continuous Speculative</b>.
      Other collision modes will result in very poor results.
    linkText: 
    url: 
    pingSceneElement: 
    settingsPage: 
    assetLinkText: 
    assetLink: {fileID: 0}
    assetLinkOpens: 0
    image: {fileID: 0}
    imageHeight: 0
  - heading: Coding for Physics Hands
    text: Physics Hands has two different types of events that you can use. Either
      through an action based setup that lets you see events for specific rigidbodies,
      or by using interfaces to receive specific events from either the hand or the
      bone for your current rigidbody.
    linkText: 
    url: 
    pingSceneElement: 
    settingsPage: 
    assetLinkText: 
    assetLink: {fileID: 0}
    assetLinkOpens: 0
    image: {fileID: 0}
    imageHeight: 0
  - heading: 
    text: You can find the example action based code here.
    linkText: 
    url: 
    pingSceneElement: 
    settingsPage: 
    assetLinkText: 
    assetLink: {fileID: 11500000, guid: 2a1425feabac99c429faf0f586eb2059, type: 3}
    assetLinkOpens: 1
    image: {fileID: 0}
    imageHeight: 0
  - heading: 
    text: You can find the example interface based code here.
    linkText: 
    url: 
    pingSceneElement: 
    settingsPage: 
    assetLinkText: 
    assetLink: {fileID: 11500000, guid: e285d0ead7ee6d24797a11e20c48b8d3, type: 3}
    assetLinkOpens: 1
    image: {fileID: 0}
    imageHeight: 0
